{"version":3,"sources":["App.js","contexts/globalTheme.js","components/styledTags/StyledDiv.js","components/styledTags/StyledForm.js","components/styledTags/StyledH1.js","components/styledTags/StyledH2.js","components/styledTags/StyledInput.js","components/styledTags/StyledSelect.js","components/styledTags/StyledP.js","index.js"],"names":["deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","devices","calcRemFromPx","size","intervalsInRem","small","middle","large","xlarge","marginsInRem","paddingsInRem","fontsizesInRem","fontWeights","thin","normal","bold","colors","base","softedBase","weightedBase","invertedBase","warn","globalTheme","types","container","card","narmal","button","logo","align","blocked","floated","ResponsiveDiv","styled","div","props","width","height","StyledDiv","children","rest","StyledForm","form","theme","isblocked","isfloated","StyledH1","h1","background","color","StyledH2","h2","StyledInput","input","isbutton","StyledSelect","select","StyledP","p","display","initState_form_dict","addr_size","public_ip_1","public_ip_2","public_ip_3","public_ip_4","private_net_size","private_host_size","host_size_arr","initState_binary_dict","Map","itr","idx","set","App","React","useState","formState","setFormState","binaryInputState","setBinaryInputState","classSubnet_1","classSubnet_2","classSubnet_3","classSubnet_4","classSubnetState","setClassSubnetState","useEffect","handleChange","event","nextFormState","target","name","value","nextBinaryInputState","select_option_ip_class","map","index","select_option_private_net_size","select_option_private_host_size","binary_ip_1","Array","fill","type","required","placeholder","pattern","onChange","binary_ip_2","binary_ip_3","binary_ip_4","iscontainer","iscard","onSubmit","ip_1","parseInt","toString","ip_2","ip_3","ip_4","charAt","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b7afbcc0.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from \"react\";\n\nimport StyledDiv from \"./components/styledTags/StyledDiv\";\nimport StyledForm from \"./components/styledTags/StyledForm\";\nimport StyledH1 from \"./components/styledTags/StyledH1\";\nimport StyledH2 from \"./components/styledTags/StyledH2\";\nimport StyledInput from \"./components/styledTags/StyledInput\";\nimport StyledSelect from \"./components/styledTags/StyledSelect\";\nimport StyledP from \"./components/styledTags/StyledP\";\n\nconst initState_form_dict = {\n  addr_size: \"\",\n  public_ip_1: \"\",\n  public_ip_2: \"\",\n  public_ip_3: \"\",\n  public_ip_4: \"\",\n  private_net_size: \"\",\n  private_host_size: \"\",\n};\nconst host_size_arr = [\"1~254\", \"255~65,535\", \"65,536~16,777,215\"];\nconst initState_binary_dict = new Map();\nfor (let itr = 1; itr <= 4; itr++) {\n  for (let idx = 0; idx <= 7; idx++) {\n    initState_binary_dict.set(\"binary_ip_\" + itr + \"_\" + idx, \"\");\n  }\n}\nconst App = () => {\n  const [formState, setFormState] = React.useState(initState_form_dict);\n  const [binaryInputState, setBinaryInputState] = React.useState(\n    initState_binary_dict\n  );\n  const [classSubnetState, setClassSubnetState] = React.useState({\n    classSubnet_1: \"\",\n    classSubnet_2: \"\",\n    classSubnet_3: \"\",\n    classSubnet_4: \"\",\n  });\n  React.useEffect(() => {\n    //렌더링시 실행\n    setFormState(initState_form_dict);\n    setBinaryInputState(initState_binary_dict);\n    return () => {\n      //렌더링 전에 뒷정리\n    };\n  }, [formState, binaryInputState]);\n  const handleChange = (event) => {\n    let nextFormState = {\n      ...formState, //객체 복사\n      [event.target.name]: event.target.value, //새로 덮어쓰기\n    };\n    setFormState(nextFormState);\n    let nextBinaryInputState = {\n      ...binaryInputState,\n      [event.target.name]: event.target.value,\n    };\n    setBinaryInputState(nextBinaryInputState);\n  };\n  const setIpClass = (event) => {\n    if (event.target.value === \"1~254\") {\n      setFormState({\n        addr_size: event.target.value,\n        public_ip_1: \"\",\n        public_ip_2: \"\",\n        public_ip_3: \"\",\n        public_ip_4: \"0\",\n      });\n      setClassSubnetState({});\n    } else if (event.target.value === \"255~65,535\") {\n      setFormState({\n        addr_size: event.target.value,\n        public_ip_1: \"\",\n        public_ip_2: \"\",\n        public_ip_3: \"0\",\n        public_ip_4: \"0\",\n      });\n    } else {\n      setFormState({\n        addr_size: event.target.value,\n        public_ip_1: \"\",\n        public_ip_2: \"0\",\n        public_ip_3: \"0\",\n        public_ip_4: \"0\",\n      });\n    }\n  };\n  const select_option_ip_class = host_size_arr.map((value, index) => (\n    <option key={index + value}>{value}</option>\n  ));\n  const select_option_private_net_size = [\"1\", \"2\"].map((value, index) => (\n    <option key={index + value}>{value}</option>\n  ));\n  const select_option_private_host_size = [\"1\", \"2\"].map((value, index) => (\n    <option key={index + value}>{value}</option>\n  ));\n  const binary_ip_1 = Array(8)\n    .fill(0)\n    .map((index) => (\n      <StyledInput\n        key={index}\n        name={\"binary_ip_1_\" + index}\n        type=\"text\"\n        required\n        placeholder=\"0\"\n        pattern=\"[0-1]\"\n        value={binaryInputState.name}\n        onChange={handleChange}\n        width=\"1%\"\n      />\n    ));\n  const binary_ip_2 = Array(8)\n    .fill(0)\n    .map((index) => (\n      <StyledInput\n        key={index}\n        name={\"binary_ip_2_\" + index}\n        type=\"text\"\n        required\n        placeholder=\"0\"\n        pattern=\"[0-1]\"\n        value={binaryInputState.name}\n        onChange={handleChange}\n        width=\"1%\"\n      />\n    ));\n  const binary_ip_3 = Array(8)\n    .fill(0)\n    .map((index) => (\n      <StyledInput\n        key={index}\n        name={\"binary_ip_3_\" + index}\n        type=\"text\"\n        required\n        placeholder=\"0\"\n        pattern=\"[0-1]\"\n        value={binaryInputState.name}\n        onChange={handleChange}\n        width=\"1%\"\n      />\n    ));\n  const binary_ip_4 = Array(8)\n    .fill(0)\n    .map((index) => (\n      <StyledInput\n        key={index}\n        name={\"binary_ip_4_\" + index}\n        type=\"text\"\n        required\n        placeholder=\"0\"\n        pattern=\"[0-1]\"\n        value={binaryInputState.name}\n        onChange={handleChange}\n        width=\"1%\"\n      />\n    ));\n\n  const handleSubmit = () => {\n    let ip_1 = parseInt(formState.public_ip_1).toString(2);\n    let ip_2 = parseInt(formState.public_ip_2).toString(2);\n    let ip_3 = parseInt(formState.public_ip_3).toString(2);\n    let ip_4 = parseInt(formState.public_ip_4).toString(2);\n    let nextBinaryInputState = new Map();\n    for (let idx = 0; idx < 4; idx++) {\n      nextBinaryInputState[\"binary_ip_1_\" + idx] = ip_1.charAt(idx);\n    }\n    for (let idx = 0; idx < 4; idx++) {\n      nextBinaryInputState[\"binary_ip_2_\" + idx] = ip_2.charAt(idx);\n    }\n    for (let idx = 0; idx < 4; idx++) {\n      nextBinaryInputState[\"binary_ip_3_\" + idx] = ip_3.charAt(idx);\n    }\n    for (let idx = 0; idx < 4; idx++) {\n      nextBinaryInputState[\"binary_ip_4_\" + idx] = ip_4.charAt(idx);\n    }\n    setBinaryInputState(nextBinaryInputState);\n  };\n  return (\n    <StyledDiv iscontainer=\"true\">\n      <StyledForm iscard=\"true\" onSubmit={handleSubmit}>\n        <StyledH1>User-friendly IP Calculator</StyledH1>\n        <StyledH2>How many hosts do you have?</StyledH2>\n        <StyledSelect\n          name=\"addr_size\"\n          required\n          value={formState.addr_size}\n          onChange={setIpClass}\n        >\n          {select_option_ip_class}\n        </StyledSelect>\n        <StyledH2>Select public Network IP address</StyledH2>\n        <StyledInput\n          type=\"text\"\n          name=\"public_ip_1\"\n          required\n          placeholder=\"1~127\"\n          value={formState.public_ip_1}\n          onChange={handleChange}\n          width=\"20%\"\n        />\n        <span>.</span>\n        <StyledInput\n          type=\"text\"\n          name=\"public_ip_2\"\n          required\n          placeholder=\"1~127\"\n          value={formState.public_ip_2}\n          onChange={handleChange}\n          width=\"20%\"\n        />\n        <span>.</span>\n        <StyledInput\n          type=\"text\"\n          name=\"public_ip_3\"\n          required\n          placeholder=\"1~127\"\n          value={formState.public_ip_3}\n          onChange={handleChange}\n          width=\"20%\"\n        />\n        <span>.</span>\n        <StyledInput\n          type=\"text\"\n          name=\"public_ip_4\"\n          required\n          placeholder=\"1~127\"\n          value={formState.public_ip_4}\n          onChange={handleChange}\n          width=\"20%\"\n        />\n        <StyledH2>How many private network IP do you want?</StyledH2>\n        <StyledSelect\n          name=\"private_net_size\"\n          required\n          value={formState.private_net_size}\n          onChange={handleChange}\n        >\n          {select_option_private_net_size}\n        </StyledSelect>\n        <StyledH2>How many hosts on each private network?</StyledH2>\n        <StyledSelect\n          name=\"private_host_size\"\n          required\n          value={formState.private_host_size}\n          onChange={handleChange}\n        >\n          {select_option_private_host_size}\n        </StyledSelect>\n        <StyledInput\n          type=\"submit\"\n          name=\"submit\"\n          value=\"calculate\"\n          isbutton=\"true\"\n          width=\"90%\"\n        />\n      </StyledForm>\n      <StyledDiv iscard=\"true\">\n        <StyledH1>See Binary Calculation</StyledH1>\n        <StyledDiv iscontainer=\"true\">\n          <span>IP:</span>\n          {binary_ip_1}\n          <span>.</span>\n          {binary_ip_2}\n          <span>.</span>\n          {binary_ip_3}\n          <span>.</span>\n          {binary_ip_4}\n        </StyledDiv>\n        <StyledDiv iscontainer=\"true\">\n          <span>class subnet: </span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_1}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_2}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_3}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            0000\n            {classSubnetState.classSubnet_4}\n          </StyledP>\n        </StyledDiv>\n        <StyledDiv iscontainer=\"true\">\n          <span>mask:</span>\n          {binary_ip_1}\n          <span>.</span>\n          {binary_ip_2}\n          <span>.</span>\n          {binary_ip_3}\n          <span>.</span>\n          {binary_ip_4}\n        </StyledDiv>\n        <StyledDiv iscontainer=\"true\">\n          <span>subnet: </span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_1}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_2}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_3}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            0000\n            {classSubnetState.classSubnet_4}\n          </StyledP>\n          <span> ~ </span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_1}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_2}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            1111\n            {classSubnetState.classSubnet_3}\n          </StyledP>\n          <span>.</span>\n          <StyledP width=\"20%\" display=\"inline-block\">\n            0000\n            {classSubnetState.classSubnet_4}\n          </StyledP>\n        </StyledDiv>\n      </StyledDiv>\n    </StyledDiv>\n  );\n};\n\nexport default App;\n","// declare in order\nconst deviceSizes = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '450px',\n  tablet: '768px',\n  tabletL: '1024px',\n};\nconst devices = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS})`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM})`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL})`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet})`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL})`,\n};\nconst calcRemFromPx = (size) => `${size / 16}rem`;\nconst intervalsInRem = {\n  small: calcRemFromPx(20),\n  middle: calcRemFromPx(40),\n  large: calcRemFromPx(60),\n  xlarge: calcRemFromPx(80),\n};\nconst marginsInRem = {\n  small: calcRemFromPx(5),\n  middle: calcRemFromPx(10),\n  large: calcRemFromPx(15),\n  xlarge: calcRemFromPx(20),\n};\nconst paddingsInRem = {\n  small: calcRemFromPx(10),\n  middle: calcRemFromPx(20),\n  large: calcRemFromPx(40),\n  xlarge: calcRemFromPx(60),\n};\nconst fontsizesInRem = {\n  small: calcRemFromPx(10),\n  middle: calcRemFromPx(15),\n  large: calcRemFromPx(20),\n  xlarge: calcRemFromPx(30),\n};\nconst fontWeights = {\n  thin: 50,\n  normal: 100,\n  bold: 300,\n};\nconst colors = {\n  base: 'olive',\n  softedBase: 'seagreen',\n  weightedBase: 'darkgreen',\n  invertedBase: 'rgba(255, 255, 255, 0.9)',\n  warn: 'red',\n  normal: 'black',\n};\n// margin : outside\n// padding: inside\n// justify-comtent : children Element 사이 여백을 최대로\n// display: inline, flex, block, none\nconst align = {\n  blocked: `\n    display: block;\n    clear: both;\n    width: 100%;\n  `,\n  floated: `\n    display: flex;\n    float: left;\n  `,\n};\nconst types = {\n  container: `\n  margin: 0 auto;\n  padding: 0;\n  box-sizing: border-box;\n  justify-content: space-between;\n`,\n  card: `\n  align-items: center;\n  margin: ${marginsInRem.middle};\n  padding: ${paddingsInRem.middle};\n  box-sizing: border-box;\n  color: ${colors.narmal};\n  background: ${colors.softedBase};\n  border-radius: ${fontsizesInRem.small};\n  `,\n  button: `\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  box-sizing: border-box;\n  margin: ${marginsInRem.small};\n  padding: ${paddingsInRem.small};\n  border: ${marginsInRem.small} solid ${colors.softedBase};\n  border-radius: ${fontsizesInRem.large};\n  font-size: ${fontsizesInRem.middle};\n  font-weight: ${fontWeights.normal};\n  color: ${colors.invertedBase};\n  background: ${colors.weightedBase};\n  &:hover {\n    color: ${colors.narmal};\n    background: ${colors.narmal};\n    cursor: pointer;\n  }\n`,\n  logo: `\n  margin: ${marginsInRem.small};\n  padding: ${paddingsInRem.small};\n  box-sizing: border-box;\n  border: none;\n  text-align: center;\n  font-size: ${fontsizesInRem.xlarge};\n  font-weight: ${fontWeights.normal};\n  color: ${colors.invertedBase};\n  background: none;\n`,\n};\nconst globalTheme = {\n  types,\n  colors,\n  align,\n  devices,\n  deviceSizes,\n  intervalsInRem,\n  marginsInRem,\n  paddingsInRem,\n  fontsizesInRem,\n  fontWeights,\n};\nexport default globalTheme;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst ResponsiveDiv = styled.div`\n  width: ${(props) => props.width || \"auto\"};\n  height: ${(props) => props.height || \"auto\"};\n`;\n\n/* 옵션이 있으면 적용하고 아니면 말고 */\nconst StyledDiv = ({ children, ...rest }) => {\n  return <ResponsiveDiv {...rest}>{children}</ResponsiveDiv>;\n};\n\nexport default StyledDiv;\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  width: ${(props) => props.width || 'auto'};\n  height: ${(props) => props.height || 'auto'};\n  ${(props) => props.theme.types.card};\n  ${(props) => props.isblocked && props.theme.align.blocked};\n  ${(props) => props.isfloated && props.theme.align.floated};\n`;\n\nexport default StyledForm;\n","/* eslint-disable react/prop-types */\nimport styled from \"styled-components\";\n\nconst StyledH1 = styled.h1`\n  background: ${(props) => props.background || \"none\"};\n  color: ${(props) => props.color || \"black\"};\n`;\n\nexport default StyledH1;\n","/* eslint-disable react/prop-types */\nimport styled from 'styled-components';\n\nconst StyledH2 = styled.h2`\n  ${(props) => props.theme.align.blocked};\n  background: ${(props) => props.background || 'none'};\n  color: ${(props) => props.color || props.theme.colors.invertedBase};\n`;\n\nexport default StyledH2;\n","import styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  width: ${(props) => props.width || 'auto'};\n  height: ${(props) => props.height || 'auto'};\n  margin: ${(props) => props.theme.marginsInRem.small};\n  background: ${(props) => props.background || props.theme.colors.invertedBase};\n  color: ${(props) => props.color || props.theme.colors.normal};\n\n  ${(props) => props.isblocked && props.theme.align.blocked};\n  ${(props) => props.isfloated && props.theme.align.floated};\n  ${(props) => props.isbutton && props.theme.types.button};\n`;\n\nexport default StyledInput;\n","import styled from 'styled-components';\n\nconst StyledSelect = styled.select`\n  width: ${(props) => props.width || '60%'};\n  height: ${(props) => props.height || 'auto'};\n  margin: ${(props) => props.theme.marginsInRem.small};\n  background: ${(props) => props.background || props.theme.colors.invertedBase};\n  color: ${(props) => props.color || props.theme.colors.normal};\n`;\n\nexport default StyledSelect;\n","/* eslint-disable react/prop-types */\nimport styled from 'styled-components';\n\nconst StyledP = styled.p`\n  width: ${(props) => props.width || 'auto'};\n  height: ${(props) => props.height || 'auto'};\n  background: ${(props) => props.background || props.theme.colors.invertedBase};\n  color: ${(props) => props.color || props.theme.colors.normal};\n  display: ${(props) => props.display || 'block'};\n\n  /* props 전달에 따라 스타일 설정 */\n  ${(props) => props.isblocked && props.theme.align.blocked};\n  ${(props) => props.isfloated && props.theme.align.floated};\n`;\n\nexport default StyledP;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport globalTheme from \"./contexts/globalTheme\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <ThemeProvider theme={globalTheme}>\n    <BrowserRouter basename=\"/ip-calculator\">\n      <App />\n    </BrowserRouter>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}